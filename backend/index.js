const express = require('express')
const cors = require('cors')
const cookieParser = require('cookie-parser')
const helmet = require('helmet') // Import helmet
const setHeaders = require('./middleware/setHeaders') // Import setHeaders middleware
require('dotenv').config()
const connectDB = require('./config/db')
const router = require('./routes')

const app = express()

// Use helmet middleware
app.use(helmet())

// Use setHeaders middleware
app.use(setHeaders)

// Set X-Frame-Options header
app.use((req, res, next) => {
  res.setHeader('X-Frame-Options', 'DENY')
  next()
})

// Set Content-Security-Policy header
app.use((req, res, next) => {
  res.setHeader('Content-Security-Policy', "frame-ancestors 'none'")
  next()
})

// Set X-Content-Type-Options header
app.use((req, res, next) => {
  res.setHeader('X-Content-Type-Options', 'nosniff')
  next()
})

app.use(cors({
    origin: process.env.FRONTEND_URL,
    credentials: true
}))
app.use(express.json())
app.use(cookieParser())

app.use("/api", router)

const PORT = 8080 || process.env.PORT

connectDB().then(() => {
    app.listen(PORT, () => {
        console.log("Connected to DB")
        console.log("Server is running on PORT " + PORT)
    })
})
